<!-- 
    ii: integer value
    ff: float value
    ss: string value
    cc: character "x" or "y" or "z"
    tt: "0" or "1" with Boolean significance false/true, respectively
-->
-------------------
<lsf>


<initials>
    <reference length="ff" />              <!-- axis length; "0" means no axis displayed -->

    <root id="ss" />     <!-- identifier of root node of the scene graph; this node -->
                        <!-- must be defined in one of the following NODE declarations -->
</initials>

<views default="ss" >

    <!-- at least one of the following type of cameras must be declared -->

    <perspective id="ss" near="ff" far="ff" angle="ff">

        <from x="ff" y="ff" z="ff" />

        <to x="ff" y="ff" z="ff" />

    </perspective>

    <ortho id="ss"  near="ff" far="ff" left="ff" right="ff" top="ff" bottom="ff" >

        <from x="ff" y="ff" z="ff" />

        <to x="ff" y="ff" z="ff" />

        <up x="ff" y="ff" z="ff" /> <!-- optional, default 0,1,0 -->

    </ortho>

</views>


<illumination>
   <ambient r="ff" g="ff" b="ff" a="ff" />              <!-- global ambient -->
    <background r="ff" g="ff" b="ff" a="ff" />     <!-- background color -->
</illumination>


<lights>
    <!-- NOTE: this block "light" must be repeated as necessary with different "id". At least one light should be present, and a maximum of eight lights is accepted. -->
   <light id="ss">                                    <!-- light identifier -->
        <enable value ="tt" />                         <!-- enable/disable -->
        <position x="ff" y="ff" z="ff" w="ff" />
               <!-- light position; w=1: point light; w=0: directional light -->

       <ambient r="ff" g="ff" b="ff" a="ff" />        <!-- ambient component -->
        <diffuse r="ff" g="ff" b="ff" a="ff" />        <!-- diffuse component -->
        <specular r="ff" g="ff" b="ff" a="ff" />       <!-- specular component -->
   </light>  
</lights>


<textures>
   <!-- NOTE: this block "TEXTURE" must be repeated as necessary with different "id" -->

    <texture id="ss" path="ss" />
</textures>


<materials>
    <!-- NOTE: the "MATERIAL" block may be repeated as required. Each defined material

         requires a distinct "id". At least one material should be present. -->
   <material id="ss">                                  
       <shininess value="ff" />
       <specular r="ff" g="ff" b="ff" a="ff" />        <!-- specular reflection -->
        <diffuse r="ff" g="ff" b="ff" a="ff" />         <!-- diffuse reflection -->
        <ambient r="ff" g="ff" b="ff" a="ff" />         <!-- ambient reflection -->
        <emissive r="ff" g="ff" b="ff" a="ff" />        <!-- emissive component -->
     </material>
</materials>

<nodes>

    <node id="ss">       <!-- defines one intermediate node; may be repeated as necessary -->

       <!-- next two lines are mandatory -->
        <material id="ss" />      <!-- this superimposes the material received from parent node
                                      id="null" maintains material from parent node -->


        <texture id="ss">         <!-- declared texture superimposes the texture received from parent node
                                      id="null" maintains texture from parent node
                                      id="clear" clears texture declaration received from parent node -->

<amplification afs="ff" aft="ff" />            <!-- for primitives = dx/afs, dy/aft -->

</texture>

        <!-- geom. transf. are optional and may be repeated, in any order, as necessary: -->

<transformations>
        <translation x="ff" y="ff" z="ff" />
       <rotation axis="cc" angle="ff" />
       <scale sx="ff" sy="ff" sz="ff" />

</transformations>

       <!-- declaring descendants, at least one node or one leaf must be present
            descendants may be mixed, nodes and leafs -->
        <descendants>
           <noderef id="ss" />   <!-- "ss" is the identifier of a node or of leaf; -->
                                 <!-- may be repeated as necessary. It can refer an -->
                                 <!-- identifier of another node, before or later defined in the file. -->

           <!-- next lines define nodes of type leaf; may be repeated, in any order, as necessary -->
            <leaf type="rectangle" x1="ff" y1="ff" x2="ff" y2="ff" />
                  <!-- 2D coordinates on the XY plane for left-top and right-bottom vertices. -->

           <leaf type="cylinder" height="ff" topRadius="ff" bottomRadius="ff" stacks="ii" slices="ii"/>
                  <!-- height, top radius, bottom radius, sections along height (stacks), parts per section (slices); main axis is aligned with ZZ; must have top and bottom caps -->

           <leaf type="sphere" radius="ff" slices="ii" stacks="ii"/>
                  <!-- radius, sections along radius, parts per section -->

           <leaf type="triangle" x1="ff" y1="ff" x2="ff" y2="ff" x3="ff" y3="ff" z3="ff"/>
                  <!-- x y z coordinates of each vertex -->

<leaf type="torus" inner="ff" outer="ff" slices="ii" loops="ii" />

           <!-- inner and outer radius, sections around the inner radius, sections around the outer radius  -->

</descendants>

</node>

</nodes>

</lsf>